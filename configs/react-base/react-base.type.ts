import type { TypedFlatConfigItem } from '@antfu/eslint-config';

import { Linter } from 'eslint';

import RuleEntry = Linter.RuleEntry;

export type ReactBaseRules = {
  'react-base/boolean-prop-naming': RuleEntry;
  'react-base/button-has-type': RuleEntry;
  'react-base/checked-requires-onchange-or-readonly': RuleEntry;
  'react-base/default-props-match-prop-types': RuleEntry;
  'react-base/destructuring-assignment': RuleEntry;
  'react-base/display-name': RuleEntry;
  'react-base/forbid-component-props': RuleEntry;
  'react-base/forbid-dom-props': RuleEntry;
  'react-base/forbid-elements': RuleEntry;
  'react-base/forbid-foreign-prop-types': RuleEntry;
  'react-base/forbid-prop-types': RuleEntry;
  'react-base/function-component-definition': RuleEntry;
  'react-base/hook-use-state': RuleEntry;
  'react-base/iframe-missing-sandbox': RuleEntry;
  'react-base/jsx-boolean-value': RuleEntry;
  'react-base/jsx-child-element-spacing': RuleEntry;
  'react-base/jsx-closing-bracket-location': RuleEntry;
  'react-base/jsx-closing-tag-location': RuleEntry;
  'react-base/jsx-curly-brace-presence': RuleEntry;
  'react-base/jsx-curly-newline': RuleEntry;
  'react-base/jsx-curly-spacing': RuleEntry;
  'react-base/jsx-equals-spacing': RuleEntry;
  'react-base/jsx-filename-extension': RuleEntry;
  'react-base/jsx-first-prop-new-line': RuleEntry;
  'react-base/jsx-fragments': RuleEntry;
  'react-base/jsx-handler-names': RuleEntry;
  'react-base/jsx-indent': RuleEntry;
  'react-base/jsx-indent-props': RuleEntry;
  'react-base/jsx-key': RuleEntry;
  'react-base/jsx-max-depth': RuleEntry;
  'react-base/jsx-max-props-per-line': RuleEntry;
  'react-base/jsx-newline': RuleEntry;
  'react-base/jsx-no-bind': RuleEntry;
  'react-base/jsx-no-comment-textnodes': RuleEntry;
  'react-base/jsx-no-constructed-context-values': RuleEntry;
  'react-base/jsx-no-duplicate-props': RuleEntry;
  'react-base/jsx-no-leaked-render': RuleEntry;
  'react-base/jsx-no-literals': RuleEntry;
  'react-base/jsx-no-script-url': RuleEntry;
  'react-base/jsx-no-target-blank': RuleEntry;
  'react-base/jsx-no-undef': RuleEntry;
  'react-base/jsx-no-useless-fragment': RuleEntry;
  'react-base/jsx-one-expression-per-line': RuleEntry;
  'react-base/jsx-pascal-case': RuleEntry;
  'react-base/jsx-props-no-multi-spaces': RuleEntry;
  'react-base/jsx-props-no-spreading': RuleEntry;
  'react-base/jsx-sort-default-props': RuleEntry;
  'react-base/jsx-sort-props': RuleEntry;
  'react-base/jsx-space-before-closing': RuleEntry;
  'react-base/jsx-tag-spacing': RuleEntry;
  'react-base/jsx-uses-react': RuleEntry;
  'react-base/jsx-uses-vars': RuleEntry;
  'react-base/jsx-wrap-multilines': RuleEntry;
  'react-base/no-access-state-in-setstate': RuleEntry;
  'react-base/no-adjacent-inline-elements': RuleEntry;
  'react-base/no-array-index-key': RuleEntry;
  'react-base/no-arrow-function-lifecycle': RuleEntry;
  'react-base/no-children-prop': RuleEntry;
  'react-base/no-danger': RuleEntry;
  'react-base/no-danger-with-children': RuleEntry;
  'react-base/no-deprecated': RuleEntry;
  'react-base/no-did-mount-set-state': RuleEntry;
  'react-base/no-did-update-set-state': RuleEntry;
  'react-base/no-direct-mutation-state': RuleEntry;
  'react-base/no-find-dom-node': RuleEntry;
  'react-base/no-invalid-html-attribute': RuleEntry;
  'react-base/no-is-mounted': RuleEntry;
  'react-base/no-multi-comp': RuleEntry;
  'react-base/no-namespace': RuleEntry;
  'react-base/no-object-type-as-default-prop': RuleEntry;
  'react-base/no-redundant-should-component-update': RuleEntry;
  'react-base/no-render-return-value': RuleEntry;
  'react-base/no-set-state': RuleEntry;
  'react-base/no-string-refs': RuleEntry;
  'react-base/no-this-in-sfc': RuleEntry;
  'react-base/no-typos': RuleEntry;
  'react-base/no-unescaped-entities': RuleEntry;
  'react-base/no-unknown-property': RuleEntry;
  'react-base/no-unsafe': RuleEntry;
  'react-base/no-unstable-nested-components': RuleEntry;
  'react-base/no-unused-class-component-methods': RuleEntry;
  'react-base/no-unused-prop-types': RuleEntry;
  'react-base/no-unused-state': RuleEntry;
  'react-base/no-will-update-set-state': RuleEntry;
  'react-base/prefer-es6-class': RuleEntry;
  'react-base/prefer-exact-props': RuleEntry;
  'react-base/prefer-read-only-props': RuleEntry;
  'react-base/prefer-stateless-function': RuleEntry;
  'react-base/prop-types': RuleEntry;
  'react-base/react-in-jsx-scope': RuleEntry;
  'react-base/require-default-props': RuleEntry;
  'react-base/require-optimization': RuleEntry;
  'react-base/require-render-return': RuleEntry;
  'react-base/self-closing-comp': RuleEntry;
  'react-base/sort-comp': RuleEntry;
  'react-base/sort-default-props': RuleEntry;
  'react-base/sort-prop-types': RuleEntry;
  'react-base/state-in-constructor': RuleEntry;
  'react-base/static-property-placement': RuleEntry;
  'react-base/style-prop-object': RuleEntry;
  'react-base/void-dom-elements-no-children': RuleEntry;
};

export type ReactBaseConfig = {
  overrides?: Partial<ReactBaseRules> & TypedFlatConfigItem['rules'];
};
